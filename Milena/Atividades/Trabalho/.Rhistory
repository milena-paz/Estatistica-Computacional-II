coef <- list(simples.A=b)
#| fig-align: "center"
par(mar=c(4.1,4.1,2.1,1))
plot(Caro ~ Barato,data=dados.1, main="Regressão por Mínimos Quadrados")
abline(a=b[1],b=b[2],lwd=2,col="red")
par(mfrow=c(1,2),mar=c(4.1,4.1,1,1))
resid <- dados.1$Caro - b[1] - b[2]*dados.1$Barato
EQM <- mean(resid^2)
lEQM <- list(simples.A = EQM)
plot(b[1] + b[2]*dados.1$Barato,resid,ylab="Resíduos",xlab="Estimativa de Caro")
abline(h=0,lty=2,col="grey30")
plot(b[1] + b[2]*dados.1$Barato,dados.1$Caro,
xlab="Estimativa de Caro",ylab="Valor real de Caro")
abline(a=0,b=1,lty=2,col="grey30")
mtext(paste("EQM =",round(EQM,3)),
side=1,padj=-2,col="blue4")
matriz <- cbind(1,as.matrix(dados.2[,-(1:2)]))
minQuad <- function(b){
return(sum((dados.2$B2-matriz%*%b)^2))
}
(b <-optim(par=c(min(dados.2$B2),0,0,0),minQuad)$par)
coef$multi.A1 <- b
#| code-fold: true
#| fig-align: "center"
resid <- dados.2$B2-matriz%*%b
EQM <- mean(resid^2)
lEQM$multi1.A <- list(EQM)
#grafico 1
par(mfrow=c(1,2),mar=c(4.1,4.1,1,1))
plot(matriz%*%b,resid,xlab="Estimativa de B2",ylab="Resíduos",
col=c("blue","red")[as.numeric(dados.2$Humidade>7)+1])
abline(h=0,lty=2,col="grey30")
#grafico 2
plot(matriz%*%b,dados.2$B2,xlab="Estimativa de B2",ylab="Valor real de B2",
col=c("blue","red")[as.numeric(dados.2$Humidade>7)+1])
abline(a=0,b=1,lty=2,col="grey30")
legend("topleft",legend=c("Humidade > 7", "Humidade <=7"),col=c("blue","red"),pch=1)
mtext(paste("EQM =",round(mean((dados.2$B2-matriz%*%b)^2),3)),
side=1,padj=-2,col="blue4")
matriz <- cbind(1,as.matrix(dados.2[,-(1:2)]), dados.2$Humidade^2)
(b <-optim(par=c(100,0,0,0,0),minQuad)$par)
coef$multi1.A <- b
#| code-fold: true
#| fig-align: "center"
resid <- dados.2$B2-matriz%*%b
EQM <- mean(resid^2)
lEQM$multi2.A <- list(EQM)
par(mfrow=c(1,2),mar=c(4.1,4.1,1,1))
plot(matriz%*%b,resid,xlab="Estimativa de B2",ylab="Resíduos")
abline(h=0,lty=2,col="grey30")
plot(matriz%*%b,dados.2$B2,xlab="Estimativa de B2",ylab="Valor real de B2")
abline(a=0,b=1,lty=2,col="grey30")
mtext(paste("EQM =",round(mean((dados.2$B2-matriz%*%b)^2),3)),
side=1,padj=-2,col="blue4")
ks.test(resid,function(q) pnorm(q, sd=sd(resid)))
minDesv <- function(b){
return( sum(abs(Y-matriz%*%b)) )
}
Y <- dados.1$Caro
matriz <- cbind(1, dados.1$Barato)
(b<- optim(par=c(1,2), minDesv)$par)
coef$simples.B <- b
#| fig-align: "center"
par(mar=c(4.1,4.1,2.1,1))
plot(Caro ~ Barato,data=dados.1, main="Regressão por Mínimos Desvios Absolutos")
abline(a=b[1],b=b[2],lwd=2,col="red")
par(mfrow=c(1,2),mar=c(4.1,4.1,1,1))
resid <- dados.1$Caro - b[1] - b[2]*dados.1$Barato
EQM <- mean(resid^2)
lEQM$simples.B <- list(EQM)
plot(b[1] + b[2]*dados.1$Barato,resid,ylab="Resíduos",xlab="Estimativa de Caro")
abline(h=0,lty=2,col="grey30")
plot(b[1] + b[2]*dados.1$Barato,dados.1$Caro,
xlab="Estimativa de Caro",ylab="Valor real de Caro")
abline(a=0,b=1,lty=2,col="grey30")
mtext(paste("EQM =",round(mean((dados.1$Caro - b[1] - b[2]*dados.1$Barato)^2),3)),
side=1,padj=-2,col="blue4")
Y <- dados.2$B2
matriz <- cbind(1,as.matrix(dados.2[,-(1:2)]))
(b <-optim(par=c(min(dados.2$B2),0,0,0),minDesv)$par)
coef$multi1.B <- b
#| fig-align: "center"
#| code-fold: true
resid <- dados.2$B2-matriz%*%b
EQM <- mean(resid^2)
lEQM$multi1.B <- list(EQM)
par(mfrow=c(1,2),mar=c(4.1,4.1,1,1))
plot(matriz%*%b,resid,xlab="Estimativa de B2",ylab="Resíduos",
col=c("blue","red")[as.numeric(dados.2$Humidade>7)+1])
abline(h=0,lty=2,col="grey30")
plot(matriz%*%b,dados.2$B2,xlab="Estimativa de B2",ylab="Valor real de B2",
col=c("blue","red")[as.numeric(dados.2$Humidade>7)+1])
abline(a=0,b=1,lty=2,col="grey30")
legend("topleft",legend=c("Humidade > 7", "Humidade <=7"),col=c("blue","red"),pch=1)
mtext(paste("EQM =",round(mean((dados.2$B2-matriz%*%b)^2),3)),
side=1,padj=-2,col="blue4")
Y<- dados.2$B2
matriz <- cbind(1,as.matrix(dados.2[,-(1:2)]), dados.2$Humidade^2)
(b <-optim(par=c(100,0,0,0,0),minDesv)$par)
coef$multi2.B <- b
#| code-fold: false
matriz <- as.matrix(dados.2[,-1])
(b<-optim(par=c(min(dados.2$B2),0,0,0),distnD)$par)
#nao converge com o mesmo parametro inicial que dos outros métodos...
(b<-optim(par=c(80,0,0,0),distnD)$par)
#assim ele converge
coef$multi1.C <- b
View(coef)
#| code-fold: false
matriz <- as.matrix(dados.2[,-1])
(b<-optim(par=c(min(dados.2$B2),0,0,0),distnD)$par)
#nao converge com o mesmo parametro inicial que dos outros métodos...
(b<-optim(par=c(60,0,0,0),distnD)$par)
#assim ele converge
coef$multi1.C <- b
#| code-fold: false
matriz <- as.matrix(dados.2[,-1])
(b<-optim(par=c(min(dados.2$B2),0,0,0),distnD)$par)
#nao converge com o mesmo parametro inicial que dos outros métodos...
(b<-optim(par=c(70,0,0,0),distnD)$par)
#assim ele converge
coef$multi1.C <- b
#| code-fold: false
matriz <- as.matrix(dados.2[,-1])
(b<-optim(par=c(min(dados.2$B2),0,0,0),distnD)$par)
#nao converge com o mesmo parametro inicial que dos outros métodos...
(b<-optim(par=c(78,0,0,0),distnD)$par)
#assim ele converge
coef$multi1.C <- b
#| code-fold: true
#| fig-align: "center"
matriz <- cbind(1,as.matrix(dados.2[,-(1:2)]))
resid <- dados.2$B2-matriz%*%b
EQM <- mean(resid^2)
lEQM$multi1.C <- list(EQM)
#grafico 1
par(mfrow=c(1,2),mar=c(4.1,4.1,1,1))
plot(matriz%*%b,resid,xlab="Estimativa de B2",ylab="Resíduos")
abline(h=0,lty=2,col="grey30")
#grafico 2
plot(matriz%*%b,dados.2$B2,xlab="Estimativa de B2",ylab="Valor real de B2")
abline(a=0,b=1,lty=2,col="grey30")
mtext(paste("EQM =",round(EQM,3)),side=1,padj=-2,col="blue4")
#| code-fold: false
matriz <- as.matrix(dados.2[,-1])
(b<-optim(par=c(min(dados.2$B2),0,0,0),distnD)$par)
#nao converge com o mesmo parametro inicial que dos outros métodos...
(b<-optim(par=c(80,0,0,0),distnD)$par)
#assim ele converge
coef$multi1.C <- b
#| code-fold: true
#| fig-align: "center"
matriz[,1] <- 1
resid <- dados.2$B2-matriz%*%b
EQM <- mean(resid^2)
lEQM$multi2.C <- list(EQM)
par(mfrow=c(1,2),mar=c(4.1,4.1,1,1))
plot(matriz%*%b,resid,xlab="Estimativa de B2",ylab="Resíduos")
abline(h=0,lty=2,col="grey30")
plot(matriz%*%b,dados.2$B2,xlab="Estimativa de B2",ylab="Valor real de B2")
abline(a=0,b=1,lty=2,col="grey30")
mtext(paste("EQM =",round(EQM,3)),side=1,padj=-2,col="blue4")
#| code-fold: false
matriz <- as.matrix(cbind(dados.2[,-1], dados.2$Humidade^2))
(b<-optim(par=c(100,0,0,0,0),distnD)$par)
#conseguiu convergir sem problemas usando o mesmo parametro
#inicial que em A e B
coef$multi2.C <- b
#| code-fold: true
#| fig-align: "center"
matriz[,1] <- 1
resid <- dados.2$B2-matriz%*%b
EQM <- mean(resid^2)
lEQM$multi2.C <- list(EQM)
par(mfrow=c(1,2),mar=c(4.1,4.1,1,1))
plot(matriz%*%b,resid,xlab="Estimativa de B2",ylab="Resíduos")
abline(h=0,lty=2,col="grey30")
plot(matriz%*%b,dados.2$B2,xlab="Estimativa de B2",ylab="Valor real de B2")
abline(a=0,b=1,lty=2,col="grey30")
mtext(paste("EQM =",round(EQM,3)),side=1,padj=-2,col="blue4")
par(mfrow=c(1,2),mar=c(4.1,4.1,1,1))
resid <- dados.1$Caro - b[1] - b[2]*dados.1$Barato
EQM <- mean(resid^2)
lEQM$simples.C <- list(EQM)
plot(b[1] + b[2]*dados.1$Barato,resid,ylab="Resíduos",xlab="Estimativa de Caro")
abline(h=0,lty=2,col="grey30")
plot(b[1] + b[2]*dados.1$Barato,dados.1$Caro,
xlab="Estimativa de Caro",ylab="Valor real de Caro")
abline(a=0,b=1,lty=2,col="grey30")
mtext(paste("EQM =",round(mean((dados.1$Caro - b[1] - b[2]*dados.1$Barato)^2),3)),
side=1,padj=-2,col="blue4")
matriz <- as.matrix(dados.1[,-1])
distnD <- function(b){
#deslocamento para a origem
matriz[,1] <- matriz[,1] - b[1]
#vetor perpendicular à reta, usando seus coeficientes
r <- b
r[1] <- -1
d<-apply(matriz,1,function(p){
#projecao do ponto na reta perpendicular
proj <- as.vector(((p%*%r)/(r%*%r)))*r
#norma do vetor(correspondente a distancia)
return(sqrt(sum(proj^2)))
#obs: nao e necessário obter essa raiz quadrada, porem
#   foi importante para convergir com o segundo conjunto de dados
#   já que estava estourando com valores muito grandes
})
return(sum(d))
}
(b<-optim(par=c(min(matriz[,1]),2),distnD)$par)
coef$simples.C <- b
par(mfrow=c(1,2),mar=c(4.1,4.1,1,1))
resid <- dados.1$Caro - b[1] - b[2]*dados.1$Barato
EQM <- mean(resid^2)
lEQM$simples.C <- list(EQM)
plot(b[1] + b[2]*dados.1$Barato,resid,ylab="Resíduos",xlab="Estimativa de Caro")
abline(h=0,lty=2,col="grey30")
plot(b[1] + b[2]*dados.1$Barato,dados.1$Caro,
xlab="Estimativa de Caro",ylab="Valor real de Caro")
abline(a=0,b=1,lty=2,col="grey30")
mtext(paste("EQM =",round(mean((dados.1$Caro - b[1] - b[2]*dados.1$Barato)^2),3)),
side=1,padj=-2,col="blue4")
View(lEQM)
paste0("simples.",c(A,B,C))
paste0("simples.",c("A","B","C"))
tabela <- lEQM$
knitr::kable(lEQM[[paste0("simples.",c("A","B","C"))]])
knitr::kable(lEQM[[paste0("simples.",c("A","B","C"))]])
lEQM[[paste0("simples.",c("A","B","C"))]]
View(lEQM)
View(lEQM)
#| code-fold: true
ID <- 1:20
Caro<- c(76,70,55,71,55,48,50,66,41,43,82,68,88,58,64,88,89,88,84,88)
Barato<- c(123,109,62,104,57,37,44,100,16,28,138,105,159,75,88,164,169,167,149,167)
dados.1 <- data.frame(ID,Caro,Barato)
rm(list=c("ID","Caro","Barato"))
knitr::kable(dados.1)
#| code-fold: true
ID <- 1:27
B2 <-c(110.4,102.8,101.0,108.4,100.7,100.3,102.0,93.7,98.9,96.6,
99.4,96.2,99.0,88.4,75.3,92.0,82.4,77.1,74.0,65.7,56.8,62.1,61.0,53.2,59.4,58.7,58.0)
Sol <- c(176,155,273,273,256,280,280,184,216,
198,59,80,80,105,180,180,177,230,203,191,191,191,76,213,213,151,205)
Humidade <- c(7.0,7.0,7.0,7.0,7.0,7.0,7.0,7.0,7.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,
2.0,2.0,47.4,47.4,47.4,47.4,47.4,47.4,47.4,47.4,47.4)
Temp.Ar <- c(78,89,89,72,84,87,74,87,88,76,
65,67,62,70,73,65,76,82,76,83,82,69,74,76,69,75,76)
dados.2 <- data.frame(ID,B2,Sol,Humidade,Temp.Ar)
rm(list=c("ID","B2","Sol","Humidade","Temp.Ar"))
knitr::kable(dados.2)
minQuad <- function(b){
return(sum((dados.1$Caro-b[1]-dados.1$Barato*b[2])^2))
}
(b <-optim(par=c(0,0),minQuad)$par)
coef <- list(simples.A=b)
#| fig-align: "center"
par(mar=c(4.1,4.1,2.1,1))
plot(Caro ~ Barato,data=dados.1, main="Regressão por Mínimos Quadrados")
abline(a=b[1],b=b[2],lwd=2,col="red")
par(mfrow=c(1,2),mar=c(4.1,4.1,1,1))
resid <- dados.1$Caro - b[1] - b[2]*dados.1$Barato
EQM <- mean(resid^2)
lEQM <- list(simples.A = EQM)
plot(b[1] + b[2]*dados.1$Barato,resid,ylab="Resíduos",xlab="Estimativa de Caro")
abline(h=0,lty=2,col="grey30")
plot(b[1] + b[2]*dados.1$Barato,dados.1$Caro,
xlab="Estimativa de Caro",ylab="Valor real de Caro")
abline(a=0,b=1,lty=2,col="grey30")
mtext(paste("EQM =",round(EQM,3)),
side=1,padj=-2,col="blue4")
matriz <- cbind(1,as.matrix(dados.2[,-(1:2)]))
minQuad <- function(b){
return(sum((dados.2$B2-matriz%*%b)^2))
}
(b <-optim(par=c(min(dados.2$B2),0,0,0),minQuad)$par)
coef$multi.A1 <- b
#| code-fold: true
#| fig-align: "center"
resid <- dados.2$B2-matriz%*%b
EQM <- mean(resid^2)
lEQM$multi1.A <- EQM
#grafico 1
par(mfrow=c(1,2),mar=c(4.1,4.1,1,1))
plot(matriz%*%b,resid,xlab="Estimativa de B2",ylab="Resíduos",
col=c("blue","red")[as.numeric(dados.2$Humidade>7)+1])
abline(h=0,lty=2,col="grey30")
#grafico 2
plot(matriz%*%b,dados.2$B2,xlab="Estimativa de B2",ylab="Valor real de B2",
col=c("blue","red")[as.numeric(dados.2$Humidade>7)+1])
abline(a=0,b=1,lty=2,col="grey30")
legend("topleft",legend=c("Humidade > 7", "Humidade <=7"),col=c("blue","red"),pch=1)
mtext(paste("EQM =",round(mean((dados.2$B2-matriz%*%b)^2),3)),
side=1,padj=-2,col="blue4")
matriz <- cbind(1,as.matrix(dados.2[,-(1:2)]), dados.2$Humidade^2)
(b <-optim(par=c(100,0,0,0,0),minQuad)$par)
coef$multi1.A <- b
#| code-fold: true
#| fig-align: "center"
resid <- dados.2$B2-matriz%*%b
EQM <- mean(resid^2)
lEQM$multi2.A <- EQM
par(mfrow=c(1,2),mar=c(4.1,4.1,1,1))
plot(matriz%*%b,resid,xlab="Estimativa de B2",ylab="Resíduos")
abline(h=0,lty=2,col="grey30")
plot(matriz%*%b,dados.2$B2,xlab="Estimativa de B2",ylab="Valor real de B2")
abline(a=0,b=1,lty=2,col="grey30")
mtext(paste("EQM =",round(mean((dados.2$B2-matriz%*%b)^2),3)),
side=1,padj=-2,col="blue4")
ks.test(resid,function(q) pnorm(q, sd=sd(resid)))
minDesv <- function(b){
return( sum(abs(Y-matriz%*%b)) )
}
Y <- dados.1$Caro
matriz <- cbind(1, dados.1$Barato)
(b<- optim(par=c(1,2), minDesv)$par)
coef$simples.B <- b
#| fig-align: "center"
par(mar=c(4.1,4.1,2.1,1))
plot(Caro ~ Barato,data=dados.1, main="Regressão por Mínimos Desvios Absolutos")
abline(a=b[1],b=b[2],lwd=2,col="red")
par(mfrow=c(1,2),mar=c(4.1,4.1,1,1))
resid <- dados.1$Caro - b[1] - b[2]*dados.1$Barato
EQM <- mean(resid^2)
lEQM$simples.B <- EQM
plot(b[1] + b[2]*dados.1$Barato,resid,ylab="Resíduos",xlab="Estimativa de Caro")
abline(h=0,lty=2,col="grey30")
plot(b[1] + b[2]*dados.1$Barato,dados.1$Caro,
xlab="Estimativa de Caro",ylab="Valor real de Caro")
abline(a=0,b=1,lty=2,col="grey30")
mtext(paste("EQM =",round(mean((dados.1$Caro - b[1] - b[2]*dados.1$Barato)^2),3)),
side=1,padj=-2,col="blue4")
Y <- dados.2$B2
matriz <- cbind(1,as.matrix(dados.2[,-(1:2)]))
(b <-optim(par=c(min(dados.2$B2),0,0,0),minDesv)$par)
coef$multi1.B <- b
#| fig-align: "center"
#| code-fold: true
resid <- dados.2$B2-matriz%*%b
EQM <- mean(resid^2)
lEQM$multi1.B <- EQM
par(mfrow=c(1,2),mar=c(4.1,4.1,1,1))
plot(matriz%*%b,resid,xlab="Estimativa de B2",ylab="Resíduos",
col=c("blue","red")[as.numeric(dados.2$Humidade>7)+1])
abline(h=0,lty=2,col="grey30")
plot(matriz%*%b,dados.2$B2,xlab="Estimativa de B2",ylab="Valor real de B2",
col=c("blue","red")[as.numeric(dados.2$Humidade>7)+1])
abline(a=0,b=1,lty=2,col="grey30")
legend("topleft",legend=c("Humidade > 7", "Humidade <=7"),col=c("blue","red"),pch=1)
mtext(paste("EQM =",round(mean((dados.2$B2-matriz%*%b)^2),3)),
side=1,padj=-2,col="blue4")
Y<- dados.2$B2
matriz <- cbind(1,as.matrix(dados.2[,-(1:2)]), dados.2$Humidade^2)
(b <-optim(par=c(100,0,0,0,0),minDesv)$par)
coef$multi2.B <- b
#| code-fold: true
#| fig-align: "center"
resid <- dados.2$B2-matriz%*%b
EQM <- mean(resid^2)
lEQM$multi2.B <- EQM
par(mfrow=c(1,2),mar=c(4.1,4.1,1,1))
plot(matriz%*%b,resid,xlab="Estimativa de B2",ylab="Resíduos")
abline(h=0,lty=2,col="grey30")
plot(matriz%*%b,dados.2$B2,xlab="Estimativa de B2",ylab="Valor real de B2")
abline(a=0,b=1,lty=2,col="grey30")
mtext(paste("EQM =",round(mean((dados.2$B2-matriz%*%b)^2),3)),
side=1,padj=-2,col="blue4")
matriz <- as.matrix(dados.1[,-1])
distnD <- function(b){
#deslocamento para a origem
matriz[,1] <- matriz[,1] - b[1]
#vetor perpendicular à reta, usando seus coeficientes
r <- b
r[1] <- -1
d<-apply(matriz,1,function(p){
#projecao do ponto na reta perpendicular
proj <- as.vector(((p%*%r)/(r%*%r)))*r
#norma do vetor(correspondente a distancia)
return(sqrt(sum(proj^2)))
#obs: nao e necessário obter essa raiz quadrada, porem
#   foi importante para convergir com o segundo conjunto de dados
#   já que estava estourando com valores muito grandes
})
return(sum(d))
}
(b<-optim(par=c(min(matriz[,1]),2),distnD)$par)
coef$simples.C <- b
#| fold-code: true
#| fig-align: "center"
par(mar=c(4.1,4.1,1,1))
plot(Caro ~ Barato,data=dados.1, main="Regressão por Mínima Distância Euclideana")
abline(a=b[1],b=b[2],lwd=2,col="red")
par(mfrow=c(1,2),mar=c(4.1,4.1,1,1))
resid <- dados.1$Caro - b[1] - b[2]*dados.1$Barato
EQM <- mean(resid^2)
lEQM$simples.C <- EQM
plot(b[1] + b[2]*dados.1$Barato,resid,ylab="Resíduos",xlab="Estimativa de Caro")
abline(h=0,lty=2,col="grey30")
plot(b[1] + b[2]*dados.1$Barato,dados.1$Caro,
xlab="Estimativa de Caro",ylab="Valor real de Caro")
abline(a=0,b=1,lty=2,col="grey30")
mtext(paste("EQM =",round(mean((dados.1$Caro - b[1] - b[2]*dados.1$Barato)^2),3)),
side=1,padj=-2,col="blue4")
#| code-fold: false
matriz <- as.matrix(dados.2[,-1])
(b<-optim(par=c(min(dados.2$B2),0,0,0),distnD)$par)
#nao converge com o mesmo parametro inicial que dos outros métodos...
(b<-optim(par=c(80,0,0,0),distnD)$par)
#assim ele converge
coef$multi1.C <- b
#| code-fold: true
#| fig-align: "center"
matriz <- cbind(1,as.matrix(dados.2[,-(1:2)]))
resid <- dados.2$B2-matriz%*%b
EQM <- mean(resid^2)
lEQM$multi1.C <- EQM
#grafico 1
par(mfrow=c(1,2),mar=c(4.1,4.1,1,1))
plot(matriz%*%b,resid,xlab="Estimativa de B2",ylab="Resíduos")
abline(h=0,lty=2,col="grey30")
#grafico 2
plot(matriz%*%b,dados.2$B2,xlab="Estimativa de B2",ylab="Valor real de B2")
abline(a=0,b=1,lty=2,col="grey30")
mtext(paste("EQM =",round(EQM,3)),side=1,padj=-2,col="blue4")
#| code-fold: false
matriz <- as.matrix(cbind(dados.2[,-1], dados.2$Humidade^2))
(b<-optim(par=c(100,0,0,0,0),distnD)$par)
#conseguiu convergir sem problemas usando o mesmo parametro
#inicial que em A e B
coef$multi2.C <- b
#| code-fold: true
#| fig-align: "center"
matriz[,1] <- 1
resid <- dados.2$B2-matriz%*%b
EQM <- mean(resid^2)
lEQM$multi2.C <- EQM
par(mfrow=c(1,2),mar=c(4.1,4.1,1,1))
plot(matriz%*%b,resid,xlab="Estimativa de B2",ylab="Resíduos")
abline(h=0,lty=2,col="grey30")
plot(matriz%*%b,dados.2$B2,xlab="Estimativa de B2",ylab="Valor real de B2")
abline(a=0,b=1,lty=2,col="grey30")
mtext(paste("EQM =",round(EQM,3)),side=1,padj=-2,col="blue4")
#| fig-align: "center"
par(mar=c(4.1,4.1,2.1,1))
plot(Caro ~ Barato,data=dados.1, main="Regressão Simples")
abline(a=coef$simples.A[1],b=coef$simples.A[2],col="grey30")
abline(a=coef$simples.B[1],b=coef$simples.B[2],col="darkorange2",lty=2)
abline(a=coef$simples.C[1],b=coef$simples.C[2],col="blue",lty=3)
View(lEQM)
lEQM[[paste0("simples.",c("A","B","C"))]]
lEQM[paste0("simples.",c("A","B","C"))]
knitr::kable(lEQM[paste0("simples.",c("A","B","C"))])
knitr::kable(cbind(lEQM[paste0("simples.",c("A","B","C"))]))
View(coef)
letras <- c("A","B","C")
knitr::kable(cbind(lEQM[paste0("simples.",letras)]),
col.names = c("Método","EQM do ajuste"), row.names = letras)
letras <- c("A","B","C")
tabela<-cbind(lEQM[paste0("simples.",letras)])
rownames(tabela)<- letras
knitr::kable(tabela, col.names = c("Método","EQM do ajuste"))
#| code-fold: true
letras <- c("A","B","C")
tabela<-cbind(lEQM[paste0("multi1.",letras)])
rownames(tabela)<- letras
knitr::kable(tabela, col.names = c("Método","EQM do ajuste"))
#| code-fold: true
letras <- c("A","B","C")
tabela <- rbind(
cbind(lEQM[paste0("simples.",letras)]),
cbind(lEQM[paste0("multi1.",letras)]),
cbind(lEQM[paste0("multi2.",letras)])
)
rownames(tabela)<- letras
letras <- c("A","B","C")
tabela <- rbind(
cbind(lEQM[paste0("simples.",letras)]),
cbind(lEQM[paste0("multi1.",letras)]),
cbind(lEQM[paste0("multi2.",letras)])
)
View(tabela)
cbind(lEQM[paste0("simples.",letras)])
cbind(lEQM[paste0("multi1.",letras)])
cbind(lEQM[paste0("multi2.",letras)])
tabela <- cbind(
cbind(lEQM[paste0("simples.",letras)]),
cbind(lEQM[paste0("multi1.",letras)]),
cbind(lEQM[paste0("multi2.",letras)])
)
View(tabela)
#| code-fold: true
letras <- c("A","B","C")
tabela <- cbind(
cbind(lEQM[paste0("simples.",letras)]),
cbind(lEQM[paste0("multi1.",letras)]),
cbind(lEQM[paste0("multi2.",letras)])
)
rownames(tabela)<- letras
knitr::kable(tabela, col.names = c("Método","EQM de reg. simples", "EQM do modelo i)","EQM do modelo ii)"))
rbind(lEQM[paste0("simples.",letras)])
tabela <- cbind(
rbind(lEQM[paste0("simples.",letras)]),
rbind(lEQM[paste0("multi1.",letras)]),
rbind(lEQM[paste0("multi2.",letras)])
)
View(tabela)
tabela <- cbind(
cbind(lEQM[paste0("simples.",letras)]),
cbind(lEQM[paste0("multi1.",letras)]),
cbind(lEQM[paste0("multi2.",letras)])
)
setwd("D:/Documentos (D)/UFJF/7-PERIODO/COMPUTACIONAL II/Estatistica-Computacional-II/Milena/Atividades/Trabalho")
