op<- par(no.readonly = T)
par(lwd=2,col="magenta")
if(i==4)
with(m[[4]],
curve(pMisturaGama(x,a,lam,probs),
add=T))
else
with(m[[i]],
curve(pMisturaNorm(x,mi,sig,probs),
add=T))
par(op)
#legend("topright",legend=c("Dens. empírica","Dens. teórica"),
#     col=c("magenta","darkgreen"),lwd=2,lty=2:1,bty="n")
}
pMisturaNorm <- function(x,mi,dp,probs){
n <- length(mi)
if(length(x)==1)
return(sum(probs*pnorm(x,mi,dp)))
#
return(rowSums(sapply(1:n,function(k) probs[k]*pnorm(x,mi[k],dp[k]))))
} #funcao distribuicao acumulada de misturas normais
dMisturaGama <- function(x,a,lam,probs){
n <- length(a)
if(length(x)==1)
return(sum(probs*pgamma(x,a,rate=lam)))
#
return(rowSums(sapply(1:n,function(k) probs[k]*pgamma(x,a[k],rate=lam[k]))))
} #funcao distribuicao acumulada de misturas gama
for(i in 1:4){
plot(ecdf(amostra[,i]),main=paste("FDA empírica da Mistura", i))
op<- par(no.readonly = T)
par(lwd=2,col="magenta")
if(i==4)
with(m[[4]],
curve(pMisturaGama(x,a,lam,probs),
add=T))
else
with(m[[i]],
curve(pMisturaNorm(x,mi,sig,probs),
add=T))
par(op)
#legend("topright",legend=c("Dens. empírica","Dens. teórica"),
#     col=c("magenta","darkgreen"),lwd=2,lty=2:1,bty="n")
}
with(m[[4]],
curve(pMisturaGama(x,a,lam,probs))
)
dMisturaNorm <- function(x,mi,dp,probs){
n <- length(mi)
if(length(x)==1)
return(sum(probs*dnorm(x,mi,dp)))
#
return(rowSums(sapply(1:n,function(k) probs[k]*dnorm(x,mi[k],dp[k]))))
} #funcao densidade de misturas normais
dMisturaGama <- function(x,a,lam,probs){
n <- length(a)
if(length(x)==1)
return(sum(probs*dnorm(x,a,rate=lam)))
#
return(rowSums(sapply(1:n,function(k) probs[k]*dgamma(x,a[k],rate=lam[k]))))
} #funcao densidade de misturas gama
for(i in 1:4){
hist(amostra[,i],freq=F,breaks=25,main=paste("Histograma da Mistura", i))
op<- par(no.readonly = T)
par(lwd=2,col="darkgreen")
if(i==4)
with(m[[4]],
curve(dMisturaGama(x,a,lam,probs),
add=T))
else
with(m[[i]],
curve(dMisturaNorm(x,mi,sig,probs),
add=T))
lines(density(amostra[,i]),col="magenta",lty=2)
par(op)
legend("topright",legend=c("Dens. empírica","Dens. teórica"),
col=c("magenta","darkgreen"),lwd=2,lty=2:1,bty="n")
}
pMisturaNorm <- function(x,mi,dp,probs){
n <- length(mi)
if(length(x)==1)
return(sum(probs*pnorm(x,mi,dp)))
#
return(rowSums(sapply(1:n,function(k) probs[k]*pnorm(x,mi[k],dp[k]))))
} #funcao distribuicao acumulada de misturas normais
pMisturaGama <- function(x,a,lam,probs){
n <- length(a)
if(length(x)==1)
return(sum(probs*pgamma(x,a,rate=lam)))
#
return(rowSums(sapply(1:n,function(k) probs[k]*pgamma(x,a[k],rate=lam[k]))))
} #funcao distribuicao acumulada de misturas gama
for(i in 1:4){
plot(ecdf(amostra[,i]),main=paste("FDA empírica da Mistura", i))
op<- par(no.readonly = T)
par(lwd=2,col="magenta")
if(i==4)
with(m[[4]],
curve(pMisturaGama(x,a,lam,probs),
add=T))
else
with(m[[i]],
curve(pMisturaNorm(x,mi,sig,probs),
add=T))
par(op)
#legend("topright",legend=c("Dens. empírica","Dens. teórica"),
#     col=c("magenta","darkgreen"),lwd=2,lty=2:1,bty="n")
}
pMisturaNorm <- function(x,mi,dp,probs){
n <- length(mi)
if(length(x)==1)
return(sum(probs*pnorm(x,mi,dp)))
#
return(rowSums(sapply(1:n,function(k) probs[k]*pnorm(x,mi[k],dp[k]))))
} #funcao distribuicao acumulada de misturas normais
pMisturaGama <- function(x,a,lam,probs){
n <- length(a)
if(length(x)==1)
return(sum(probs*pgamma(x,a,rate=lam)))
#
return(rowSums(sapply(1:n,function(k) probs[k]*pgamma(x,a[k],rate=lam[k]))))
} #funcao distribuicao acumulada de misturas gama
for(i in 1:4){
plot(ecdf(amostra[,i]),main=paste("FDA empírica da Mistura", i))
op<- par(no.readonly = T)
par(lwd=2,col="magenta")
if(i==4)
with(m[[4]],
curve(pMisturaGama(x,a,lam,probs),
add=T))
else
with(m[[i]],
curve(pMisturaNorm(x,mi,sig,probs),
add=T))
par(op)
legend("topright",legend=c("Acumulada Teórica","Acumulada Empírica"),
col=c("magenta","black"),lwd=1:2,bty="n")
}
pMisturaNorm <- function(x,mi,dp,probs){
n <- length(mi)
if(length(x)==1)
return(sum(probs*pnorm(x,mi,dp)))
#
return(rowSums(sapply(1:n,function(k) probs[k]*pnorm(x,mi[k],dp[k]))))
} #funcao distribuicao acumulada de misturas normais
pMisturaGama <- function(x,a,lam,probs){
n <- length(a)
if(length(x)==1)
return(sum(probs*pgamma(x,a,rate=lam)))
#
return(rowSums(sapply(1:n,function(k) probs[k]*pgamma(x,a[k],rate=lam[k]))))
} #funcao distribuicao acumulada de misturas gama
for(i in 1:4){
plot(ecdf(amostra[,i]),main=paste("FDA empírica da Mistura", i))
op<- par(no.readonly = T)
par(lwd=2,col="magenta")
if(i==4)
with(m[[4]],
curve(pMisturaGama(x,a,lam,probs),
add=T))
else
with(m[[i]],
curve(pMisturaNorm(x,mi,sig,probs),
add=T))
par(op)
legend("bottomright",legend=c("Acumulada Teórica","Acumulada Empírica"),
col=c("magenta","black"),lwd=1:2,bty="n")
}
pMisturaNorm <- function(x,mi,dp,probs){
n <- length(mi)
if(length(x)==1)
return(sum(probs*pnorm(x,mi,dp)))
#
return(rowSums(sapply(1:n,function(k) probs[k]*pnorm(x,mi[k],dp[k]))))
} #funcao distribuicao acumulada de misturas normais
pMisturaGama <- function(x,a,lam,probs){
n <- length(a)
if(length(x)==1)
return(sum(probs*pgamma(x,a,rate=lam)))
#
return(rowSums(sapply(1:n,function(k) probs[k]*pgamma(x,a[k],rate=lam[k]))))
} #funcao distribuicao acumulada de misturas gama
for(i in 1:4){
plot(ecdf(amostra[,i]),main=paste("FDA empírica da Mistura", i))
op<- par(no.readonly = T)
par(lwd=2,col="magenta")
if(i==4)
with(m[[4]],
curve(pMisturaGama(x,a,lam,probs),
add=T))
else
with(m[[i]],
curve(pMisturaNorm(x,mi,sig,probs),
add=T))
par(op)
legend("bottomright",legend=c("Acumulada Teórica","Acumulada Empírica"),
col=c("magenta","black"),lwd=2:1,bty="n")
}
## MEDIA AMOSTRAL
medias <- apply(amostra,2,mean)
#teste de hipótese
for(i in 1:4){
print(t.test(amostra[,i],mu=m[[i]]$media))
}
## VARIANCIA AMOSTRAL
vars <- apply(amostra,2,var)
#teste de hipótese
suppressPackageStartupMessages(library(EnvStats,quietly=T))
for(i in 1:4){
print(varTest(amostra[,i],sigma.squared = m[[i]]$var))
}
## ASSIMETRIA AMOSTRAL
assimet <- apply(amostra,2,skewness)
## CURTOSE AMOSTRAL
curtose <- apply(amostra,2,kurtosis)
#comparacao em tabela
rbind(mi.amostra=medias, mi.teorico=sapply(m,function(ms) ms$media))
rbind(var.amostra=vars,var.teorico=sapply(m,function(ms) ms$var))
rbind(skew.amostra=assimet, skew.teorico=sapply(m,function(ms) ms$skew))
rbind(kurt.amostra=curtose, kurt.teorico=sapply(m,function(ms) ms$kurt))
pMisturaNorm <- function(x,mi,dp,probs){
n <- length(mi)
if(length(x)==1)
return(sum(probs*pnorm(x,mi,dp)))
#
return(rowSums(sapply(1:n,function(k) probs[k]*pnorm(x,mi[k],dp[k]))))
} #funcao distribuicao acumulada de misturas normais
pMisturaGama <- function(x,a,lam,probs){
n <- length(a)
if(length(x)==1)
return(sum(probs*pgamma(x,a,rate=lam)))
#
return(rowSums(sapply(1:n,function(k) probs[k]*pgamma(x,a[k],rate=lam[k]))))
} #funcao distribuicao acumulada de misturas gama
for(i in 1:4){
plot(ecdf(amostra[,i]),main=paste("FDA empírica da Mistura", i))
op<- par(no.readonly = T)
par(lwd=2,col="magenta")
if(i==4)
with(m[[4]],
curve(pMisturaGama(x,a,lam,probs),
add=T));
print(ks.test(amostra[,i],pMisturaGama())
)
else
with(m[[i]],
curve(pMisturaNorm(x,mi,sig,probs),
add=T)
)
par(op)
legend("bottomright",legend=c("Acumulada Teórica","Acumulada Empírica"),
col=c("magenta","black"),lwd=2:1,bty="n")
}
pMisturaNorm <- function(x,mi,dp,probs){
n <- length(mi)
if(length(x)==1)
return(sum(probs*pnorm(x,mi,dp)))
#
return(rowSums(sapply(1:n,function(k) probs[k]*pnorm(x,mi[k],dp[k]))))
} #funcao distribuicao acumulada de misturas normais
pMisturaGama <- function(x,a,lam,probs){
n <- length(a)
if(length(x)==1)
return(sum(probs*pgamma(x,a,rate=lam)))
#
return(rowSums(sapply(1:n,function(k) probs[k]*pgamma(x,a[k],rate=lam[k]))))
} #funcao distribuicao acumulada de misturas gama
for(i in 1:4){
plot(ecdf(amostra[,i]),main=paste("FDA empírica da Mistura", i))
op<- par(no.readonly = T)
par(lwd=2,col="magenta")
if(i==4)
with(m[[4]],
curve(pMisturaGama(x,a,lam,probs),
add=T));
print(ks.test(amostra[,i],pMisturaGama())
)
)
else
with(m[[i]],
curve(pMisturaNorm(x,mi,sig,probs),
add=T)
)
par(op)
legend("bottomright",legend=c("Acumulada Teórica","Acumulada Empírica"),
col=c("magenta","black"),lwd=2:1,bty="n")
}
pMisturaNorm <- function(x,mi,dp,probs){
n <- length(mi)
if(length(x)==1)
return(sum(probs*pnorm(x,mi,dp)))
#
return(rowSums(sapply(1:n,function(k) probs[k]*pnorm(x,mi[k],dp[k]))))
} #funcao distribuicao acumulada de misturas normais
pMisturaGama <- function(x,a,lam,probs){
n <- length(a)
if(length(x)==1)
return(sum(probs*pgamma(x,a,rate=lam)))
#
return(rowSums(sapply(1:n,function(k) probs[k]*pgamma(x,a[k],rate=lam[k]))))
} #funcao distribuicao acumulada de misturas gama
for(i in 1:4){
plot(ecdf(amostra[,i]),main=paste("FDA empírica da Mistura", i))
op<- par(no.readonly = T)
par(lwd=2,col="magenta")
if(i==4)
with(m[[4]],
curve(pMisturaGama(x,a,lam,probs),
add=T);
print(ks.test(amostra[,i],pMisturaGama())
)
)
else
with(m[[i]],
curve(pMisturaNorm(x,mi,sig,probs),
add=T)
)
par(op)
legend("bottomright",legend=c("Acumulada Teórica","Acumulada Empírica"),
col=c("magenta","black"),lwd=2:1,bty="n")
}
pMisturaNorm <- function(x,mi,dp,probs){
n <- length(mi)
if(length(x)==1)
return(sum(probs*pnorm(x,mi,dp)))
#
return(rowSums(sapply(1:n,function(k) probs[k]*pnorm(x,mi[k],dp[k]))))
} #funcao distribuicao acumulada de misturas normais
pMisturaGama <- function(x,a,lam,probs){
n <- length(a)
if(length(x)==1)
return(sum(probs*pgamma(x,a,rate=lam)))
#
return(rowSums(sapply(1:n,function(k) probs[k]*pgamma(x,a[k],rate=lam[k]))))
} #funcao distribuicao acumulada de misturas gama
for(i in 1:4){
plot(ecdf(amostra[,i]),main=paste("FDA empírica da Mistura", i))
op<- par(no.readonly = T)
par(lwd=2,col="magenta")
if(i==4)
with(m[[4]],
curve(pMisturaGama(x,a,lam,probs),
add=T)
print(ks.test(amostra[,i],pMisturaGama())
)
)
else
with(m[[i]],
curve(pMisturaNorm(x,mi,sig,probs),
add=T)
)
par(op)
legend("bottomright",legend=c("Acumulada Teórica","Acumulada Empírica"),
col=c("magenta","black"),lwd=2:1,bty="n")
}
pMisturaNorm <- function(x,mi,dp,probs){
n <- length(mi)
if(length(x)==1)
return(sum(probs*pnorm(x,mi,dp)))
#
return(rowSums(sapply(1:n,function(k) probs[k]*pnorm(x,mi[k],dp[k]))))
} #funcao distribuicao acumulada de misturas normais
pMisturaGama <- function(x,a,lam,probs){
n <- length(a)
if(length(x)==1)
return(sum(probs*pgamma(x,a,rate=lam)))
#
return(rowSums(sapply(1:n,function(k) probs[k]*pgamma(x,a[k],rate=lam[k]))))
} #funcao distribuicao acumulada de misturas gama
for(i in 1:4){
plot(ecdf(amostra[,i]),main=paste("FDA empírica da Mistura", i))
op<- par(no.readonly = T)
par(lwd=2,col="magenta")
if(i==4){
with(m[[4]],
curve(pMisturaGama(x,a,lam,probs),
add=T))
with(m[[i]],
print(ks.test(amostra[,i],pMisturaGama,a=a,lam=lam,probs=probs)) )
}
else
with(m[[i]],
curve(pMisturaNorm(x,mi,sig,probs),
add=T)
)
par(op)
legend("bottomright",legend=c("Acumulada Teórica","Acumulada Empírica"),
col=c("magenta","black"),lwd=2:1,bty="n")
}
pMisturaNorm <- function(x,mi,dp,probs){
n <- length(mi)
if(length(x)==1)
return(sum(probs*pnorm(x,mi,dp)))
#
return(rowSums(sapply(1:n,function(k) probs[k]*pnorm(x,mi[k],dp[k]))))
} #funcao distribuicao acumulada de misturas normais
pMisturaGama <- function(x,a,lam,probs){
n <- length(a)
if(length(x)==1)
return(sum(probs*pgamma(x,a,rate=lam)))
#
return(rowSums(sapply(1:n,function(k) probs[k]*pgamma(x,a[k],rate=lam[k]))))
} #funcao distribuicao acumulada de misturas gama
for(i in 1:4){
plot(ecdf(amostra[,i]),main=paste("FDA empírica da Mistura", i))
op<- par(no.readonly = T)
par(lwd=2,col="magenta")
if(i==4){
with(m[[4]],
curve(pMisturaGama(x,a,lam,probs),
add=T))
with(m[[i]],
print(ks.test(amostra[,i],pMisturaGama,a=a,lam=lam,probs=probs)) )
}
else{
with(m[[i]],
curve(pMisturaNorm(x,mi,sig,probs),
add=T))
with(m[[i]],
print(ks.test(amostra[,i],pMisturaNorm,mi=mi,dp=sig,probs=probs)) )
}
par(op)
legend("bottomright",legend=c("Acumulada Teórica","Acumulada Empírica"),
col=c("magenta","black"),lwd=2:1,bty="n")
}
## NORMAIS
#funcao geradora de normais
rNorm<- function(n,mu=0,sd=1){
# usa Box-Muller (mas só retorna Z1*sigma+mi)
U1<- runif(n)
U2<- runif(n)
a<- sqrt(-2*log(U1))
b<- 2*pi*U2
return(a*cos(b)*sd+mu)
}
## GAMA
#podemos fazer essa estimativa por meio de soma de a exponenciais(lambda), de forma:
rGama <- function(n, a, lam){
#eu usaria a propriedade da soma de logs, mas ele estava sendo
#arredondado para 0 e isso levava a um erro de computaçao
return( apply(replicate(n,runif(a)),2, function(u) sum(-log(u))/lam) )
}
#funcao geradora de mistura
rMisturaNormGama <- function(n,mist,gamma=F){
par1 <- mist[[1]]
par2 <- mist[[2]]
probs <- mist$probs
k<- length(par2)
X<- numeric(n)
U <- runif(n)
p <- cumsum(c(0,probs))
#CASO GAMA
if(gamma){
for(i in 1:k){
caso <- U <= p[i+1] & U> p[i]
tam <- sum(caso)
X[caso] <- rGama(tam,par1[i],par2[i])
}
return(X)
}
#CASO NORMAL
for(i in 1:k){
caso <- U <= p[i+1] & U> p[i]
tam <- sum(caso)
X[caso] <- rNorm(tam,par1[i],par2[i])
}
return(X)
}
n<-1E3
#inicializando a matriz das amostras
amostra <- mapply(rMisturaNormGama,n=n,mist=m,gamma=c(F,F,F,T))
colnames(amostra) <- c(paste0("Norm",c(1,2,3)),"Gamas")
pMisturaNorm <- function(x,mi,dp,probs){
n <- length(mi)
if(length(x)==1)
return(sum(probs*pnorm(x,mi,dp)))
#
return(rowSums(sapply(1:n,function(k) probs[k]*pnorm(x,mi[k],dp[k]))))
} #funcao distribuicao acumulada de misturas normais
pMisturaGama <- function(x,a,lam,probs){
n <- length(a)
if(length(x)==1)
return(sum(probs*pgamma(x,a,rate=lam)))
#
return(rowSums(sapply(1:n,function(k) probs[k]*pgamma(x,a[k],rate=lam[k]))))
} #funcao distribuicao acumulada de misturas gama
for(i in 1:4){
plot(ecdf(amostra[,i]),main=paste("FDA empírica da Mistura", i))
op<- par(no.readonly = T)
par(lwd=2,col="magenta")
if(i==4){
#curva da acumulada teorica
with(m[[4]],
curve(pMisturaGama(x,a,lam,probs),
add=T))
#teste K-S
with(m[[i]],
print(ks.test(amostra[,i],pMisturaGama,a=a,lam=lam,probs=probs)) )
}
else{
#curva da acumulada teorica
with(m[[i]],
curve(pMisturaNorm(x,mi,sig,probs),
add=T))
#teste K-S
with(m[[i]],
print(ks.test(amostra[,i],pMisturaNorm,mi=mi,dp=sig,probs=probs)) )
}
par(op)
legend("bottomright",legend=c("Acumulada Teórica","Acumulada Empírica"),
col=c("magenta","black"),lwd=2:1,bty="n")
}
