---
title: "Atividade 1: Gera√ß√£o de n√∫meros aleat√≥rios"
subtitle: "EST066 - 2025.1"
date: today
format: html
lang: pt-br
editor: visual
author: "Milena Paz Freitas"
self-contained: true
toc: true
---

```{r}
mat <- 109
```

# Quest√£o 1

::: {.callout-note appearance="minimal"}
**Enunciado:** Calcule a forma expl√≠cita da fun√ß√£o quant√≠lica e implemente gerador de n√∫meros aleat√≥rios das seguintes distribui√ß√µes:

a.  Weibull. \[alunos com mat (mod 3) = 0\]

b.  Pareto. \[alunos com mat (mod 3) = 1\]

c.  Valor extremo. \[alunos com mat (mod 3) = 2\]
:::

```{r}
# mat %% 3 = 1 ent√£o farei a letra b.
## Fun√ß√£o quant√≠lica da distribui√ß√£o Pareto(m,a):
qpareto <- function(p,m=1,a=1){
  m/(1-p)**(1/a)
}
##M√©todo da inversa:
rpareto <- function(n, m=1,a=1){
  return(qpareto(runif(n), m, a))
}

##testando o gerador
X<- rpareto(100)
#graficamente
hist(X,freq=F,breaks=50)
curve(1/x^2,add=T,lwd=2,col="blue")
#komolgorov-smirnov (alfa=0.05)
ks.test(X, function(x) 1-1/x)
```

Consistentemente (ap√≥s v√°rias repeti√ß√µes), tanto o histograma quanto o teste Komolgorov-Smirnov geraram resultados suficientemente bons.

# Quest√£o 2

::: {.callout-note appearance="minimal"}
**Enunciado:** Use o m√©todo da inversa para gerar uma vari√°vel aleat√≥ria com a seguinte fun√ß√£o de distribui√ß√£o acumulada:

$$
F_{X}(x)= 
\begin{cases}
  1 & , \text{ se } x > 1 \\
  \frac{x^2+x}{2} & ,\text{ se } 0\leq x \leq 1 \\
  0 & ,\text{ se } x<0
\end{cases}
$$
:::

```{r}
##a fun√ß√£o quant√≠lica dessa distribui√ß√£o seria:
qcustom <- function(p){
  sqrt(2*p+1/4)-0.5
}
##M√©todo da inversa:
rcustom <- function(n){
  return(qcustom(runif(n)))
}

##testando gerador
X<- rcustom(2E3)
#graficamente
hist(X,freq=F,breaks=50)
curve(x+1/2,add=T,lwd=2,col="blue")
#komolgorov-smirnov (alfa=0.05)
ks.test(X, function(x) (x^2+x)/2)
```

# Quest√£o 3

::: {.callout-note appearance="minimal"}
**Enunciado:** Apresente o c√≥digo de um m√©todo para gerar uma vari√°vel aleat√≥ria com a seguinte fun√ß√£o de densidade de probabilidade:

$$
f_{X}(x)= \text{e}^{-2|x|} \text{, }x \in \mathbb{R}.
$$
:::

```{r}
#temos que X~Laplace(0,1/2) ou "dupla exponencial"
#assim, a acumulada  √© dada por:
# Fx(x)=1/2*exp(x*2) , se x<0
# Fx(x)=1 - 1/2*exp(-x*2), se x>0'

##podemos ent√£o definir a quant√≠lica:
qcustom <- function(p){
  X <- numeric(length(p))
  case1 <- p<=1/2
  X[case1] <- log(2*p[case1])/2
  X[!case1] <- -0.5*log(2-2*p[!case1])
  return(X)
}
##M√©todo da inversa:
rcustom <- function(n){
  return(qcustom(runif(n)))
}

##testando a geradora
X<-rcustom(1E3)
#graficamente
hist(X,freq=F,breaks=50)
curve(exp(-2*abs(x)),add=T,lwd=2,col="blue")
#teste komolgorov-smirnov (alfa=0.05)
ks.test(X, function(x){
  #funcao distrib acumulada de uma Laplace(0,1/2)
  d<- numeric(length(x))
  case1 <- x<=0
  d[case1] <- 0.5*exp(2*x[case1])
  d[!case1] <- 1-0.5*exp(-2*x[!case1])
  return(d)
})
```

Consistentemente (ap√≥s v√°rias repeti√ß√µes), tanto o histograma quanto o teste Komolgorov-Smirnov geraram resultados suficientemente bons.

# Quest√£o 4

::: {.callout-note appearance="minimal"}
**Enunciado:** Mostre que se $U\sim \mathcal{U}(0,1)$, ent√£o $X=\ln \frac{u}{1-u}$ √© uma vari√°vel aleat√≥ria Log√≠stica(0, 1). Mostre tamb√©m como gerar uma vari√°vel aleat√≥ria Log√≠stica$(\mu,\beta)$.
:::

Primeiro calculamos o coeficiente Jacobiano em fun√ß√£o de $u$ e $x$:

$$
u=\frac{e^x}{1+e^x}\quad \text{√© a inversa da transforma√ß√£o}
$$

$$
J(u)=\frac{dX}{du}= \frac{1-u}{u}\frac{(1-u) - (-u)}{(1-u)^2}=\frac{1}{u(1-u)}
$$

$$
J(x)=\frac{(1+e^x)^2}{e^x}
$$

O suporte de X √© o conjunto dos n√∫meros reais, pois representa a subtra√ß√£o entre dois n√∫meros negativos: $X=\log(\frac{u}{1-u})=\log(u)-\log(1-u)$, onde $\log u, \log(1-u) \in (-\infty,0)$.

Em seguida, aplicamos a transforma√ß√£o na densidade de U:

$$
\begin{align}
  g_X(x) & =f_U(x)|J(x)|^{-1} \text I_{\mathbb{R}}(x) =
  \frac{e^x}{(1+e^x)^2}\text I_{\mathbb{R}}(x) =
  \frac{e^{2x}}{e^{2x}} \frac{e^x}{(1+e^x)^2}\text I_{\mathbb{R}}(x)
  \\
  & = \frac{e^{-x}}{e^{-2x}(1+2e^x+e^{2x})}\text I_{\mathbb{R}}(x)=
  \frac{e^{-x}}{(e^{-2x}+2e^{-x}+1)}\text I_{\mathbb{R}}(x)
  \\
  & = \frac{e^{-x}}{(1+e^{-x})^2}\text I_{\mathbb{R}}(x)
\end{align}
$$

Que √© a exatamente a densidade de uma $X \sim \text{Log√≠stica}(0,1)$.

Agora, para gerar uma VA Log√≠stica$(\mu,\beta)$ temos o seguinte algoritmo:

```{r}
#METODO DA TRANSFORMACAO
rlogistic<- function(n,m=0,b=1){
  #1- Logistica padrao
  U<- runif(n)
  L<- log(U/(1-U))
  #2- Loca√ß√£o-escala com os par√¢metros dados
  X<- L*b+m
  return(X)
}
#exemplos graficos:
par(mfrow=c(3,4),mar=c(3,3,1,1))
for (i in c(0,2,6)){
  for(j in c(1,2,4,7)){
    hist(rlogistic(1E3,i,j),freq=F,xlim=c(-20,20), main=
           paste("m=",i,"b=",j),breaks=100,xlab="",ylab='',border="gray40")
    curve(dlogis(x,i,j),add=T,col='blue',lwd=2) #usando a implementacao de {stats}
  }
}
#teste komolgorov-smirnov:
ks.test(rlogistic(100),plogis)
ks.test(rlogistic(100,2,3),plogis,location=2,scale=3)
```

# Quest√£o 5

::: {.callout-note appearance="minimal"}
**Enunciado:** Para $\alpha \in [0,1]$, mostre que o algoritmo a seguir:

-   Gerar $U \sim \mathcal{U}(0,1)$ at√© que $U<\alpha$

produz uma simula√ß√£o de $\mathcal{U}(0,\alpha)$ e o compare com a transforma√ß√£o $\alpha U$ para valores de $\alpha$ pr√≥ximos de 1.
:::

```{r}
#fun√ß√£o que gera uniformemente um n√∫mero entre 0 e a
unif.alfa <- function(a=0.5){
  U<-2
  while(U>=a){
    U<-runif(1)
  }
  return(U)
}
##Comparando os dois m√©todos
par(mfrow=c(3,2))
for(a in c(0.91,0.95,0.9999)){
  #unif.alfa:
  X<-replicate(1E4,unif.alfa(a))
  hist(X,freq=F,sub=bquote(alpha==.(a)),main="Aceita√ß√£o-Rejei√ß√£o")
  #U*alpha:
  X2<-runif(1E4)*a
  hist(X2,freq=F,sub=bquote(alpha==.(a)),main="Transforma√ß√£o")
}
```

Podemos observar que ambos os m√©todos produzem resultados satisfat√≥rios para a gera√ß√£o de uma Uniforme$(0,\alpha)$

# Quest√£o 6

::: {.callout-note appearance="minimal"}
**Enunciado:** Seja o gerador linear congruencial dado por: $$x_i ‚â° (ax_{i-1}+c) \mod ùëö$$ Em que **a** √© chamado multiplicador, **c**, incremento e **m**, m√≥dulo do gerador. Frequentemente, **c** √© igual a 0 e, neste caso, o gerador √© denominado gerador congruencial multiplicativo. Com essas considera√ß√µes, execute o que se segue:

a.  Implemente um c√≥digo em R para construir um gerador de n√∫meros pseudoaleat√≥rios, usando um m√©todo congruencial multiplicativo com $m = 2^{13} ‚àí 1$ e $a = 17$.

b.  Gere 500 n√∫meros $x_i$.

c.  Calcule a correla√ß√£o dos pares de n√∫meros sucessivos $x_{i+1}$ e $x_i$.

d.  Plote os pares. Em quantas linhas est√£o os pontos est√£o situados?

e.  Agora, fa√ßa a = 85. Gere 500 n√∫meros, calcule a correla√ß√£o dos pares e plote-os.

f.  Verifique os pares xi+2 e xi. Calcule sua correla√ß√£o.

g.  Comente o que julgar pertinente.
:::

```{r}
##A)Gerador congluencial multiplicativo
geradora <- function(n,Xo,m=2^13-1,a=17){
  X <- numeric(n)
  for(i in 1:n){
    X[i] <- Xo
    Xo <- a*Xo %% m
  }
  return(X)
}
##B)
X<- geradora(500,1)
##C)
pares<- 1:250*2
impares <- 1:250*2-1
cor(X[impares],X[pares])
##D)
plot(X[impares],X[pares],main="a=17")
#  s√£o 17 linhas! exatamente o mesmo valor de a
##E)
X<- geradora(500,1,a=85)
cor(X[impares],X[pares])
plot(X[impares],X[pares],main="a= 85")
#F)
impares<- 1:249*2-1
cor(X[impares],X[impares+2])
plot(X[impares],X[impares+2],main="a= 85")
#
pares <- 1:249*2
cor(X[pares],X[pares+2])
plot(X[pares],X[pares+2],main="a= 85")
#G)
#podemos observar que, para valor a suficientemente grande, √© mais dif√≠cil
#enxergar um padr√£o entre n√∫meros consecutivos do vetor (s√£o muitas linhas)
```

# Quest√£o 7

::: {.callout-note appearance="minimal"}
**Enunciado:** Deseja-se construir um gerador da distribui√ß√£o de Cauchy. Compare o m√©todo da invers√£o com outro baseado na gera√ß√£o de par de n√∫meros aleat√≥rios normais gerados pelo m√©todo polar de Box-Muller.

a.  Mostre que, se $X_1$ e $X_2$ s√£o independentes e identicamente distribu√≠das de acordo com a normal padr√£o, ent√£o $Y=\frac{X_1}{X_2}$ tem distribui√ß√£o de Cauchy.

b.  Mostre que a fun√ß√£o de distribui√ß√£o acumulada da vari√°vel aleat√≥ria de Cauchy √© $F(x)=\frac{\arctan(x)}{\pi}$ e implemente gerador dessa distribui√ß√£o usando o m√©todo da invers√£o.

c.  Algum desses m√©todos √© superior? Justifique.

d.  Use o gerador de sua prefer√™ncia e elabore c√≥digo para verificar empiricamente o Teorema Central do Limite, simulando m√©dias amostrais de amostra aleat√≥ria (vari√°veis aleat√≥rias iid) de popula√ß√£o de Cauchy.
:::

#### A) Prova de que $X_1/X_2$ √© Cauchy

Sejam $X_1$ e $X_2$ vari√°veis aleat√≥rias normais padr√£o independentes. A sua conjunta, ent√£o, √© dada por:

$$
f_{X_1,X_2}(x_1,x_2)=
\frac {\exp \{-(x_1^2+x_2^2)/2\}}{2 \pi}  \text I_{\mathbb{R}}(x_1) I_{\mathbb{R}}(x_2)
$$

Para realizarmos a transforma√ß√£o $Y=X_1/X_2$, escolhemos uma auxiliar $T= X_2$. Dessa forma, temos o coeficiente Jacobiano:

$$
\begin{aligned}
& J(x_1,x_2) = \begin{vmatrix}
      x_2^{-1} & x_1x_2^{-2} \\
      0 & 1
    \end{vmatrix}
    =x_2^{-1}
\\
& J(y,t)=t^{-1}
\end{aligned}
$$

Assim, temos que a conjunta de Y e T √© dada por:

$$
\begin{aligned}
  g_{Y,T}(y,t) & =f_{X_1,X_2}(yt,t)|J|^{-1} I_{\mathbb{R}}(y)I_{\mathbb{R}}(t)=
  \frac {\exp \{-(y^2t^2+t^2)/2\}}{2 \pi}  I_{\mathbb{R}}(y) I_{\mathbb{R}}(t)
  \\
  & =\frac {\exp \{-t^2(y^2+1)/2\}}{2 \pi}  I_{\mathbb{R}}(y) I_{\mathbb{R}}(t)
\end{aligned}
$$

e, portanto, a marginal de Y √© obtida da seguinte forma:

$$
\begin{aligned}
  g_Y(y) & =\int_{-\infty}^{+\infty}
  \frac {|t|\exp \{-t^2(y^2+1)/2\}}{2 \pi}  I_{\mathbb{R}}(y) dt =
  \frac{I_{\mathbb{R}}(y)}{2\pi}\int_{-\infty}^{+\infty}
  \exp \{-t^2(y^2+1)/2\}|t|  dt
  \\
  & =\frac{I_{\mathbb{R}}(y)}{2\pi(y^2+1)}\int_{-\infty}^{+\infty}
  \exp \{-t^2(y^2+1)/2\}(y^2+1)|t|  dt
\end{aligned}
$$

, onde o integrando √© uma fun√ß√£o par, portanto:

$$
\begin{aligned}
  g_Y(y) & = \frac{I_{\mathbb{R}}(y)}{2\pi(y^2+1)}2\int_{0}^{+\infty}
  \exp \{-t^2(y^2+1)/2\}(y^2+1)|t|  dt
\end{aligned}
$$

Fazendo simples substitui√ß√£o com $u=t^2(y^2+1)/2$ e $du=t(y^2+1)dt$, temos:

$$
\begin{aligned}
  g_Y(y) & = \frac{I_{\mathbb{R}}(y)}{\pi(y^2+1)}\int_{0}^{+\infty} e^{-u}du=
  \frac{I_{\mathbb{R}}(y)}{\pi(y^2+1)}( -e^{-u} |^{+\infty}_0)
  \\
  & =\frac{I_{\mathbb{R}}(y)}{\pi(y^2+1)}(0 +1) = \frac{1}{\pi(y^2+1)}I_{\mathbb{R}}(y)
\end{aligned}
$$

Que √© a densidade de uma **Cauchy(0,1)**, portanto $Y \sim \text{Cauchy}(0,1)$

```{r}
#METODO 1: DA TRANSFORMA√á√ÉO
r.cauchy1 <- function(n){
  Z1<-rnorm(n)
  Z2<-rnorm(n)
  while(any(Z2==0)){
      zeros <- Z2 == 0
      Z2[zeros]<- rnorm(sum(zeros))
    }
  return(Z1/Z2)
}
X<- r.cauchy1(1E3)
hist(X,freq=F,breaks=50)
curve(dcauchy(x),add=T,col="blue")
#teste de komolgorov-smirnov
ks.test(X, pcauchy)
```

#### B) Fun√ß√£o de distribui√ß√£o acumulada de Y

Temos que a FDA de Y √© dada por:

\begin{aligned}
  G_Y(y) & = \int^{y}_{-\infty} g_Y(y) dy=\int^{y}_{-\infty} \frac{1}{\pi(y^2+1)} dy
  = \frac{1}{\pi} \int^{y}_{-\infty} \frac{1}{(y^2+1)} dy = \frac{1}{\pi} \arctan(y)|^y_{-\infty}
  \\
  = & \frac{\arctan(y)+\pi/2}{\pi} = \frac{\arctan(y)}{\pi} + \frac{1}{2}
\end{aligned}

E a fun√ß√£o quant√≠lica √©:

$$
\begin{aligned}
  G_y^{-1}(p)=\tan[\pi(p-1/2)]
\end{aligned}
$$

```{r}
#METODO 2: DA INVERSA
r.cauchy2 <- function(n){
  return(tan( pi*( runif(n) - 0.5) ))
}

#testando
X<-r.cauchy2(1E3)
#graficamente
hist(X,freq=F,breaks=25)
curve(dcauchy(x),add=T,col="blue")
#teste de komolgorov-smirnov
ks.test(X, pcauchy)
```

O m√©todo da inversa pode ser uma melhor escolha pois a transforma√ß√£o de duas normais padr√£o em Cauchy requer que o denominador seja diferente de 0, que pode manter a fun√ß√£o em loop at√© que se garanta que nenhum X2 seja nulo. Por outro lado, o m√©todo 2 √© livre de tais restri√ß√µes.

```{r}
##D)
par(mfrow=c(2,2))
for(n in c(3,50,500,1E4)){
  X<- r.cauchy2(n)
  Xbar<-mean(X)
  hist(Xbar,freq=F,breaks=100,main=expression("Histograma de"~ bar(X)),sub=paste("n=",n))
}
```

Podemos observar que $\bar{X}$ da Cauchy n√£o converge para uma normal. Isso √© esperado, j√° que vari√°veis aleat√≥rias de distrubui√ß√£o Cauchy n√£o possuem vari√¢ncia nem m√©dia finitas, o que √© uma condi√ß√£o fundamental do Teorema Central do Limite.

# Quest√£o 8

::: {.callout-note appearance="minimal"}
**Enunciado:** Implemente c√≥digo em R para gerar n√∫meros aleat√≥rios de uma distribui√ß√£o
$\mathcal{B}(\alpha,\beta)$, com a seguinte fun√ß√£o de densidade de probabilidade:

$$
f_X(x)= \frac{1}{\text{B}(2.7;6.3)}x^{2.7-1}(1-x)^{6.3-1}\text{I}_{[0,1]}(x)
$$

a. Use o algoritmo de aceita√ß√£o/rejei√ß√£o baseado na distribui√ß√£o uniforme.

b. Use o algoritmo de aceita√ß√£o/rejei√ß√£o baseado em beta gerada de acordo
com a transforma√ß√£o apresentada no exemplo 2.2 de Robert e Casella
(2010), p√°g. 69 (do pdf).

c. Compare graficamente esses dois procedimentos, apresente os pontos
gerados em cores diferentes para quando situarem-se na regi√£o de
aceita√ß√£o ou de rejei√ß√£o. Apresente o porcentual de pontos gerados nas
duas regi√µes. Comente.
:::

```{r}
##A) ----
#Fy ~ Beta(2.7,6.3)
#Gy ~ Unif(0,1)

#A moda (x onde fx √© m√°xima) dessa beta √© (2.7-1)/(2.7+6.3-2)
#portanto:
M<- dbeta((1.7)/(2.7+4.3),2.7,6.3)
#Taxa de aceitacao esperada:
1/M

#visualizando a candidata Gy sobre a alvo Fx
curve(dbeta(x,2.7,6.3))
points((1.7)/(2.7+4.3),M,pch=19)
curve(dunif(x)*M,add=T,lty=2,lwd=2,col="#005DFF")
#da pra ver que a densidade da candidata nao "abra√ßa" muito bem o nosso alvo

razao<- function(x){
  dbeta(x,2.7,6.3)/dunif(x)
}

#GERANDO POR M√âTODO ACEITACAO-REJEI√á√ÉO

gera1 <- function(n){
  MU<- M*runif(n)
  Y<- runif(n)
  aceita <- MU<= razao(Y)
  return(list(ger=Y, aceita=aceita,MU=MU))
}
##
X1 <- gera1(1E4)
Beta <- X1$ger[X1$aceita]
#taxa de aceitacao da amostra gerada:
taxa <- mean(X1$aceita)

#verifica√ß√£o gr√°fica
hist(Beta, freq=F,col="grey90",breaks=20)
curve(dbeta(x,2.7,6.3),add=T,col="red",lwd=2)
```
```{r}

##B)
#Fy ~ Beta(2.7,6.3)
#Gy ~ Beta(2,6)

#para gerar valores Beta(2,6) ser√° usada a transforma√ß√£o com vari√°veis Exp(1)
# do livro do Casella
beta26 <- function(n){
  #alocando o vetor da beta
  Y <- numeric(n)
  
  for(i in 1:n){
    #parte a
    U <- runif(2)
    E1 <- -log(U) #transforma√ß√£o de uniforme em Exp(1)
    #parte b
    U <- runif(6)
    E2 <- -log(U)
    #transformacao em beta(2,6)
    Y[i] <- sum(E1)/sum(E1,E2)
  }
  return(Y)
}
#########

razao <- function(x){
  dbeta(x,2.7,6.3)/dbeta(x,2,6)
}

M <- optimise(razao,maximum=T,interval=c(0,1))$objective
#Taxa de aceitacao esperada:
1/M

#visualizando a candidata Gy sobre a alvo Fx
curve(dbeta(x,2,6)*M,lty=2,lwd=2,col="blue")
curve(dbeta(x,2.7,6.3),add=T)

#METODO ACEITACAO REJEICAO
gera2 <- function(n){
  MU<- M*runif(n)
  Y<- beta26(n)
  aceita <- MU<= razao(Y)
  return(list(ger=Y, aceita=aceita,MU=MU))
}
##
X2 <- gera2(1E4)
Beta2 <- X2$ger[X2$aceita]
#taxa de aceitacao da amostra gerada:
taxa2 <- mean(X2$aceita)

#verifica√ß√£o gr√°fica
hist(Beta2, freq=F,col="grey90",breaks=20)
curve(dbeta(x,2.7,6.3),add=T,col="red",lwd=2)

```
```{r}
##C)
par(mfrow=c(1,2),mar=c(3,2,1,1))
MU <- X1$MU
aceita <- X1$aceita
ordenadas<- MU*dunif(X1$ger)

#METODO 1
#Curvas de Fy e Gy
curve(dbeta(x, 2.7,6.3),lwd=2,col="#003591",ylim=c(0,5))
curve(dunif(x)*dbeta((1.7)/(2.7+4.3),2.7,6.3),add=T,lty=2,lwd=2,col="orange")
#pontos aceitos
points(Beta,ordenadas[aceita],col="#003591",pch=19,cex=0.3)
#pontos rejeitados
points(X1$ger[!aceita],ordenadas[!aceita],col="orange",pch=19,cex=0.3)

#taxa de aceitacao da amostra gerada
taxa1 <-mean(aceita)

MU <- X2$MU
aceita <- X2$aceita
ordenadas<- MU*dbeta(X2$ger,2,6)

#METODO 2
#Curvas de Fy e Gy
curve(dbeta(x,2,6)*M,lty=2,lwd=2,col="orange",ylim=c(0,5))
curve(dbeta(x, 2.7,6.3),lwd=2,col="#003591",add=T)
#pontos aceitos
points(Beta2,ordenadas[aceita],col="#003591",cex=0.3)
#pontos rejeitados
points(X2$ger[!aceita],ordenadas[!aceita],col="orange",pch=19,cex=0.3)
legend(x="topright",pch=19,col=c("orange","#003591"),bty="n",legend=c("Rejeitados","Aceitos"))

##COMPARANDO as taxas de aceita√ß√£o:
#EM PORCENTAGEM
c("Uniforme"=taxa1*100,"Beta(2,6)"=taxa2*100)
```

Ambos m√©todos deram certo, por√©m: temos que o m√©todo da letra **B**, onde a $G_Y$ √© $\mathcal{B}$(2,6), tem uma taxa de aceita√ß√£o aproximadamente 60% maior que o da letra **A**, onde usamos uma Uniforme(0,1). Dessa forma, podemos concluir que a segunda op√ß√£o √© 
a mais eficiente.

# Quest√£o 9

::: {.callout-note appearance="minimal"}
**Enunciado:** Seja X uma vari√°vel aleat√≥ria exponencial com m√©dia 1. Crie um c√≥digo com um
algoritmo eficiente para simular uma vari√°vel aleat√≥ria cuja distribui√ß√£o √© a
distribui√ß√£o condicional de X, dado que X < 0,05, ou seja, cuja fun√ß√£o de
densidade de probabilidade √©:

$$
f_X(x)= \begin{cases}
\frac{e^{-x}}{1-e^{-0.05}} &\text{ , se } 0 \leq x\leq 0.05;
\\
0 & \text{ , caso contr√°rio}
\end{cases}
$$

a. Estime $\text{E}(X|X<0.05)$ por meio de 1.000 n√∫meros aleat√≥rios dessa
vari√°vel.

b. Determine o valor exato de $\text{E}(X|X<0.05)$ e compare com o resultado
obtido em (a).
:::

#### A)

Podemos usar o m√©todo da inversa, come√ßando por integrar a fun√ß√£o densidade de probabilidade $f_x$:

$$
\begin{aligned}
F_X(x) & = \int_0^x\frac{e^{-x}}{1-e^{-0.05}}dx= \frac{1}{1-e^{-0.05}} \int_0^xe^{-x}dx = \frac{1}{1-e^{-0.05}}(-e^{-x})|^x_0
\\
& =\frac{1-e^{-x}}{1-e^{-0.05}}
\end{aligned}
$$

E em seguida, invertendo a fun√ß√£o distribui√ß√£o acumulada para obter a quant√≠lica:

$$
\begin{aligned}
F_X^{-1}(x) & = -\log[1-p(1-e^{-0.05})]
\end{aligned}
$$

```{r}

quantilica <- function(p){
  Q <- numeric(length(p))
  case1 <- p >=0 & p<=1
  Q[case1] <- -log(1-p*(1-exp(-0.05)))
  Q[!case1] <- 0
  return(Q)
}

U <- runif(1E4)
X<- quantilica(U)

##ESTIMANDO VALOR ESPERADO
mean(X)
```

#### B)

Para determinarmos o valor exato de $\text{E}(X|X<0.05)$, fazemos o seguinte c√°lculo:

$$
\begin{aligned}
\text{E}(X|X<0.05) & =\int^{0.05}_0\frac{xe^{-x}}{1-e^{-0.05}}dx=\frac{1}{1-e^{-0.05}} \left[ (-xe^{-x})|_0^{0.05} +\int_0^{0.05}e^{-x}dx \right]
\\ &=\frac{-0.05e^{-0.05}+1-e^{-0.05}}{1-e^{-0.05}} = \frac{1-1.05e^{-0.05}}{1-e^{-0.05}}= 0.02479168
\end{aligned}
$$

Lembrando, o valor da m√©dia da simula√ß√£o foi:

```{r}
mean(X)
```

Que √© bem pr√≥ximo do esperado.

# Quest√£o 10

::: {.callout-note appearance="minimal"}
**Enunciado:** Use o resultado apresentado no exerc√≠cio 7, p√°gina 92, de ROSS (2006) e construa
algoritmo para gerar vari√°vel aleat√≥ria com fun√ß√£o de distribui√ß√£o acumulada,
apresentada abaixo. Avalie seu desempenho:

$$
F_X(x)=\begin{cases}\frac{1-e^{-2x}+2x}{3} & \text{, se } 0<x<1;
\\
\frac{3-e^{-2x}}{3} & \text{ , se } 1<x<\infty
\end{cases}
$$

:::

A distribui√ß√£o apresentada aparenta ser a combina√ß√£o linear de uma Exponencial(2) e uma Uniforme(0,1), tal que:

$$
F_X(x)= \frac{1}{3} F_E(x) +\frac{2}{3}F_U(x)
$$

, onde $E \sim Exp(2)$ e $U \sim \mathcal{U}(0,1)$. 

Dessa forma, podemos aplicar o m√©todo da composi√ß√£o apresentado em ROSS (2006) no R:

```{r}
nSIM<-1E3
X<- numeric(nSIM)
#1- Gerar um n√∫mero V ~ U(0,1)
V<-runif(nSIM)
#2- Identificar se √© maior ou menor que alfa (nesse caso, alfa=1/3)
case1 <- V < 1/3
#3- Gerar E ou U a depender do caso
X[case1] <- rexp(sum(case1),2) #caso 1
X[!case1] <- runif(sum(!case1)) #caso 2
#
#resultado:
hist(X,freq=F,breaks=25)

plot(ecdf(X),lwd=2)
curve(pexp(x,2)/3+2*punif(x)/3,add=T,col="red",lty=2,lwd=2)
legend("bottomright", legend=c("Emp√≠rica","Te√≥rica"),lty=c(1,2),col=c("black","red"),lwd=2,bty="n")
``` 

Como podemos observar, principalmente pelo segundo gr√°fico, a amostra gerada se ajusta muito bem √† distribui√ß√£o composta $F_X$!